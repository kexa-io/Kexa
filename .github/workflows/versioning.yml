name: versioning

on:
  push:
    branches:
      - main
    paths-ignore:
      - "package.json"
      - "CHANGELOG.md"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      issues: write
      id-token: write

    steps:
      - name: Setup up node 24
        uses: actions/setup-node@v6
        with:
          node-version: 24

      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Verify Bun Installation
        run: |
          echo "Bun version: $(bun --version)"

      - name: Install Dependencies
        run: bun i

      - name: Run tests
        run: bun run test

      - name: Install Semantic Release and Plugins
        run: bun add -d semantic-release @semantic-release/changelog @semantic-release/exec

      - name: Permissions for semantic-release
        run: chmod +x ./node_modules/.bin/semantic-release

      - name: Run Semantic Release
        id: ver
        run: bun x semantic-release --debug
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get latest release version
        uses: rez0n/actions-github-release@794c12f5e8d629e6ca329cf2e2daeb0f0ce6a3ce # main
        id: get_latest_release
        with:
          token: ${{ steps.app-token.outputs.token }}
          repository: "kexa-io/Kexa"
          type: "stable"

      - name: Print New Latest Version
        run: echo ${{ steps.get_latest_release.outputs.release }}

      - name: Update package.json version
        run: |
          # Update version in package.json using jq
          jq '.version = "${{ steps.get_latest_release.outputs.release }}"' package.json > package.json.tmp
          mv package.json.tmp package.json

      - name: Update CHANGELOG.md
        run: |
          echo "# Changelog" > CHANGELOG.md.new
          echo "" >> CHANGELOG.md.new
          echo "## [${{ steps.get_latest_release.outputs.release }}] - $(date +%Y-%m-%d)" >> CHANGELOG.md.new
          echo "" >> CHANGELOG.md.new

          if [ -f CHANGELOG.md ]; then
            tail -n +2 CHANGELOG.md >> CHANGELOG.md.new
          fi

          mv CHANGELOG.md.new CHANGELOG.md

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ steps.app-token.outputs.token }}
          commit-message: "chore: update version files to ${{ steps.get_latest_release.outputs.release }} [skip ci]"
          title: "chore: update version files to ${{ steps.get_latest_release.outputs.release }} [skip ci]"
          body: |
            - Version: ${{ steps.get_latest_release.outputs.release }}
            - Updated files: package.json, CHANGELOG.md
            - Generated by: ${{ github.workflow }} workflow
            - Commit: ${{ github.sha }}

            This PR includes `[skip ci]` to prevent retriggering the versioning workflow.
          branch: update-version-files-${{ steps.get_latest_release.outputs.release }}
          delete-branch: true
          add-paths: |
            package.json
            CHANGELOG.md

    ######################################


      - name: Login to Docker New Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_NAME}}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME_KEXA }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD_KEXA }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push on Docker Registry
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: ./
          push: true
          no-cache: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ secrets.DOCKER_REGISTRY_NAME}}/kexa/kexa:${{ steps.get_latest_release.outputs.release }}
            ${{ secrets.DOCKER_REGISTRY_NAME}}/kexa/kexa:latest