- version: 1.0.0
  date: 07-18-2023
  alert:
    fatal:
      enabled: true
      type: 
        - log
        #- email
      to:
        - myEmail@gmail.com
    error:
      enabled: true
      type: 
        - log
        #- email
        #- sms
      to: 
        - myEmail@gmail.com
    warning:
      enabled: true
      type: 
        - log
        #- email
      to:
        - myEmail@gmail.com
    info:
      enabled: true
      type: 
        - log
        #- email
      to: 
        - myEmail@gmail.com
    global:
      enabled: true
      type: 
        - log
        #- webhook
        #- sms
        #- email
      to: 
        #- http://127.0.0.1:5000/test
        - myEmail@gmail.com
      conditions:
        - level: 0
          min: 1
        - level: 1
          min: 1
        - level: 2
          min: 1
        - level: 3
          min: 1
  rules:
    - name: "check-vm-reservation"
      description : "check if VM have a reservation"
      applied: true
      level: 0
      cloudProvider: azure
      objectName : ComputeManagementClient.virtualMachines
      conditions: 
        - property: priority
          condition: REGEX
          value: (?i)reservation
    - name: "azure-is-disk-orphan"
      description : "this rules is to check if disk is orphan"
      applied: true
      level: 1
      cloudProvider: azure
      objectName : ComputeManagementClient.disks
      conditions:
        - property : diskState
          condition : DIFFERENT
          value : Unattached
    - name: "aks-has-scaleSet"
      description : "check if aks have a scaleSet"
      applied: true
      level: 0
      cloudProvider: azure
      objectName : ContainerServiceClient.managedClusters
      conditions: 
        - property: agentPoolProfiles
          condition: ALL
          value: 
            - property: scaleSetEvictionPolicy
              condition: EQUAL
              value: Delete
    - name: "azure-orphan-nsg"
      description : "this rules is to check if nsg is orphan"
      applied: true
      level: 1
      cloudProvider: azure
      objectName : NetworkManagementClient.networkSecurityGroups
      conditions:
        - operator: OR
          criteria:
            - property : networkInterfaces
              condition : COUNT_SUP_OR_EQUAL
              value : 1
            - property : subnets
              condition : COUNT_SUP_OR_EQUAL
              value : 1
    - name: "Orphan virtualNetwork"
      description : "this rules is to check if virtualNetwork is orphan"
      applied: true
      level: 1
      cloudProvider: azure
      objectName : NetworkManagementClient.virtualNetworks
      conditions:
        - property : subnets
          condition : COUNT_SUP_OR_EQUAL
          value : 1
    - name: "azure-virtual-network-minimum-subnets"
      description : "check if NSG have a minimum of subnets"
      applied: true
      level: 1
      cloudProvider: azure
      objectName : NetworkManagementClient.virtualNetworks
      conditions: 
        - property: subnets
          condition: COUNT_SUP
          value: 0
    - name: "aks-is-scaleset-down"
      description : "check if aks have a scaleSet down"
      applied: true
      level: 0
      cloudProvider: azure
      objectName : ContainerServiceClient.managedClusters
      conditions: 
        - property: agentPoolProfiles
          condition: ALL
          value: 
            - property: scaleSetEvictionPolicy
              condition: EQUAL
              value: Delete
    - name: "azure-check-aks-cluster-conformity"
      description : "this rules is to check if aks cluster are conform to the norms"
      applied: false
      level: 2
      cloudProvider: azure
      objectName : ContainerServiceClient.managedClusters
      conditions:
        - property : tags.environment
          condition : REGEX
          value : ^(DEV|NPR|PROD)$
        - property : tags.author
          condition : DIFFERENT
          value : NULL
        - property : tags.billing
          condition : REGEX
          value : ^(VADOR|YODA|LUKE)$
        - property : sku.tier
          condition : EQUAL
          value : Free
        - property : publicNetworkAccess
          condition : EQUAL
          value : Enable
        - property : autoScalerProfile.scaleDownDelayAfterAdd
          condition : DIFFERENT
          value : NULL
    - name: "azure-disk-not-public-or-encrypted"
      description : "this rules is to check if disk is either not public or encrypted by default"
      applied: false
      level: 2
      cloudProvider: azure
      objectName : ComputeManagementClient.disks
      conditions:
        - operator : OR
          criteria:
            - property : networkAccessPolicy
              condition : DIFFERENT
              value : AllowAll
            - property : encryption.type
              condition : EQUAL
              value : EncryptionAtRestWithPlatformKey
    - name: "azure-nsg-valid-subnet"
      description : "check if NSG have a valid subnet"
      applied: true
      level: 1
      cloudProvider: azure
      objectName : ContainerServiceClient.managedClusters
      conditions:
        - property: agentPoolProfiles
          condition: COUNT
          value: 2
    - name: "not-under-use-VM"
      description: "this rule is if a VM is under-used (50% > CPU or 50%>RAM over 2 weeks) "
      applied: true
      level: 1
      cloudProvider: azure
      objectName: KexaAzure.vm
      conditions:
        - operator: OR
          criteria:
            - property: instanceView.percentageCPU.mean
              condition: SUP
              value: 50
            - property: instanceView.availableMemoryBytes.mean
              condition: SUP
              value: 50
    - name: "azure-storage-account-no-public-access"
      description: "this rule is to check on azure storage account for public access"
      applied: false
      level: 1
      cloudProvider: azure
      objectName: StorageManagementClient.storageAccounts
      conditions:
        - property: publicNetworkAccess
          condition: DIFFERENT
          value: 'Enabled'
    - name: "azure-storage-account-encryption-enabled"
      description: "this rule is to check on azure storage account for encryption enabled"
      applied: true
      level: 1
      cloudProvider: azure
      objectName: StorageManagementClient.storageAccounts
      conditions:
        - operator: AND
          criteria:
            - property: encryption.services.file.enabled
              condition: EQUAL
              value: true
            - property: encryption.services.blob.enabled
              condition: EQUAL
              value: true
    - name: "azure-storage-account-encryption-using-kms"
      description: "this rule is to check on azure storage account for encryption using kms"
      applied: true
      level: 1
      cloudProvider: azure
      objectName: StorageManagementClient.storageAccounts
      conditions:
        - operator: AND
          criteria:
            - property: encryption.services.file.keySource
              condition: EQUAL
              value: 'Microsoft.Keyvault'
            - property: encryption.services.blob.keySource
              condition: EQUAL
              value: 'Microsoft.Keyvault'
    - name: "azure-user-not-logged-in-since-X-days"
      description: "user sign in 200days"
      applied: true
      level: 2
      cloudProvider: azure
      objectName: KexaAzure.users
      conditions:
        - property: signInActivity.lastSuccessfulSignInDateTime
          condition: DATE_INF
          value: 0 0 0 200 0 0 0 # not logged in since 200 days
          date: "YYYY-MM-DDThh:mm:ss.SSSZ"

    - name: "azure-service-principal-credentials-expiration-is-set"
      description: "ensure service principal credentials expiration is set"
      applied: true
      level: 2
      cloudProvider: azure
      objectName: KexaAzure.servicePrincipals
      conditions:
        - property: passwordCredentials
          condition: ALL
          value:
            - property: endDateTime
              condition: DIFFERENT
              value: null
        - property: keyCredentials
          condition: ALL
          value:
            - property: endDateTime
              condition: DIFFERENT
              value: null

    - name: "azure-service-principal-credentials-expiration-in-10days"
      description: "notify of service principal credentials expiration in 10 days"
      applied: true
      level: 2
      cloudProvider: azure
      objectName: KexaAzure.servicePrincipals
      conditions:
        - property: passwordCredentials
          condition: ALL
          value:
            - property: endDateTime
              condition: DATE_INF
              value: 0 0 0 10 0 0 0
              date: "YYYY-MM-DDThh:mm:ss.SSSZ"
        - property: keyCredentials
          condition: ALL
          value:
            - property: endDateTime
              condition: DATE_INF
              value: 0 0 0 10 0 0 0
              date: "YYYY-MM-DDThh:mm:ss.SSSZ"

    - name: "azure-application-credentials-expiration-is-set"
      description: "ensure application credentials expiration is set"
      applied: true
      level: 2
      cloudProvider: azure
      objectName: KexaAzure.applications
      conditions:
        - property: passwordCredentials
          condition: ALL
          value:
            - property: endDateTime
              condition: DIFFERENT
              value: null
        - property: keyCredentials
          condition: ALL
          value:
            - property: endDateTime
              condition: DIFFERENT
              value: null

    - name: "azure-application-credentials-expiration-in-10days"
      description: "notify of application credentials expiration in 10 days"
      applied: true
      level: 2
      cloudProvider: azure
      objectName: KexaAzure.applications
      conditions:
        - property: passwordCredentials
          condition: ALL
          value:
            - property: endDateTime
              condition: DATE_INF
              value: 0 0 0 10 0 0 0
              date: "YYYY-MM-DDThh:mm:ss.SSSZ"
        - property: keyCredentials
          condition: ALL
          value:
            - property: endDateTime
              condition: DATE_INF
              value: 0 0 0 10 0 0 0
              date: "YYYY-MM-DDThh:mm:ss.SSSZ"