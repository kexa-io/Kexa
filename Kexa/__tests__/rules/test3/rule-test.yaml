- version: 1.0.0
  date: 07-31-2023
  alert:
    error:
      enabled: true
      type: 
        - log
        #- email
        #- sms
      to: 
        - thecloudprice@4urcloud.Kexa
    warning:
      enabled: true
      type: 
        - log
        #- email
      to:
        - thecloudprice@4urcloud.Kexa
    info:
      enabled: true
      type: 
        - log
        #- email
      to: 
        - thecloudprice@4urcloud.Kexa
    global:
      enabled: true
      type: 
        - log
        #- webhook
        #- sms
        #- email
      name: aws-cloud-tests
      to: 
        #- http://127.0.0.1:5000/test
        #- thecloudprice@4urcloud.Kexa
      conditions:
        - level: 0
          min: 1
        - level: 1
          min: 1
        - level: 2
          min: 1
        - level: 3
          min: 1
  rules:
    - name: "aws-ec2-public-ip-address"
      description : "this rule is to check if an ec2 ip address is public"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: EC2Client.Instances
      conditions:
        - property: PublicIpAddress
          condition: EQUAL
          value: null
    - name: "aws-ec2-volume-unattached"
      description: "this rule is to check if an ec2 volume is unattached"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: EC2Client.Volumes
      conditions:
        - property: Attachments
          condition: COUNT_SUP
          value: 0
    - name: "aws-ec2-instance-deallocated"
      description: "this rule is to check if an ec2 instance is terminated"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: EC2Client.Instances
      conditions:
        - operator: NAND
          rules:
            - property: State
              condition: EQUAL
              value: terminated
            - property: PrivateIpAddress
              condition: DIFFERENT
              value: null
    - name: "aws-ec2-securitygroup-all-traffic"
      description: "this rule is to check if an ec2 security group has no traffic filter"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: EC2Client.SecurityGroups
      conditions:
        - property: IpPermissions
          condition: ALL
          value:
            - property: IpProtocol
              condition: DIFFERENT
              value: "-1"
    - name: "ec2-security-group-all-ports"
      description: "this rule is to check if ec2 security group has a defined port"
      applied: false
      level: 1
      cloudProvider: aws
      objectName: EC2Client.SecurityGroups
      conditions:
        - property: IpPermissions
          condition: ALL
          value:
            - operator: AND
              rules:
                - property: FromPort
                  condition: REGEX
                  value: '^\d+$'
                - property: ToPort
                  condition: REGEX
                  value : '^\d+$'
  #  - name: "gcp-test-rule"
  #    description: "testing gcp gather"
  #    applied: true
  #    level: 1
  #    cloudProvider: gcp
  #    conditions: